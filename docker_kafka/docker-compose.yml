version: '2'
networks:
  default:
    name: t-dat-901-network

services:
  zookeeper:
    container_name: t-dat-901-zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - default

  redpanda:
    container_name: t-dat-901-redpanda
    image: docker.redpanda.com/redpandadata/redpanda:latest
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 9644:9644
      - 29092:29092
    networks:
      - default

  console:
    container_name: t-dat-901-console
    image: docker.redpanda.com/redpandadata/console:latest
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["host.docker.internal:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://host.docker.internal:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://host.docker.internal:9644"]
        connect:
          enabled: true
          clusters:
            - name: tdat901
              url: http://host.docker.internal:8080
    ports:
      - 8080:8080
    depends_on:
      - redpanda
    networks:
      - default
    #volumes:
    #  - ./redpanda-console-config.yaml:/etc/redpanda/redpanda-console-config.yaml Pas prend en compte config optionnel
